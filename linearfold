#!/usr/bin/env python

import gflags as flags
import subprocess
import sys

FLAGS = flags.FLAGS

def setgflags():
	flags.DEFINE_integer('b', 100, "set beam size, (DEFAULT=100)")
	flags.DEFINE_boolean('V', False, "use vienna parameters, (DEFAULT=FALSE)")
	flags.DEFINE_boolean('sharpturn', False, "enable sharp turn in prediction, (DEFAULT=FALSE)")
	flags.DEFINE_boolean('verbose', False, "print out energy of each loop in the structure, (DEFAULT=FALSE)")
	argv = FLAGS(sys.argv)

def main():
	use_vienna = FLAGS.V
	print(use_vienna)
	beamsize = str(FLAGS.b)
	is_sharpturn = '1' if FLAGS.sharpturn else '0'
	is_verbose = '1' if FLAGS.verbose else '0'

	cmd = ['./linearfold_v' if use_vienna else './linearfold_c', beamsize, is_sharpturn, is_verbose]
	subprocess.call(cmd, stdin=sys.stdin)
	
if __name__ == '__main__':
	setgflags()
	main()

